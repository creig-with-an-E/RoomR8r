{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\"; // ********** start of login actions\n\nvar loginStart = function loginStart() {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\n\nvar loginSuccess = function loginSuccess(idToken) {\n  createCookie(idToken);\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload: {\n      userToken: idToken\n    }\n  };\n};\n\nexport var login = function login(email, password) {\n  return function (dispatch) {\n    loginStart();\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI\", {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).then(function (response) {\n      dispatch(loginSuccess(response.data.idToken));\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      });\n    });\n  };\n}; //**handling persistant storage */ \n\nvar createCookie = function createCookie(idToken) {\n  // creates cookie that expires in an hour\n  Cookie.set(\"userToken\", idToken, {\n    expires: 1 / 24\n  });\n};\n\nvar destroyCookie = function destroyCookie() {\n  console.log(\"deleting cookie\"); // deletes cookie when user logs out\n\n  Cookie.remove(\"userToken\");\n}; // *********end of login actions\n// *********start of signup actions\n\n\nvar signupSuccess = function signupSuccess(idToken) {\n  createCookie(idToken);\n  return {\n    type: actionTypes.SIGNUP_USER_SUCCESS,\n    payload: {\n      userToken: idToken\n    }\n  };\n};\n\nexport var signup = function signup(email, password) {\n  return function (dispatch) {\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI\", {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).then(function (response) {\n      dispatch(signupSuccess(response.data.idToken));\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: actionTypes.SIGNUP_USER_FAIL\n      });\n    });\n  };\n}; // *******end of signup actions\n\nexport var clearError = function clearError() {\n  return {\n    type: actionTypes.CLEAR_ERRORS\n  };\n}; //****** */\n\nexport var logoutUser = function logoutUser() {\n  destroyCookie();\n  return {\n    type: actionTypes.LOGOUT_USER\n  };\n}; //****** */\n// saving userToken\n\nexport var updateSavedToken = function updateSavedToken(token) {\n  return {\n    type: actionTypes.UPDATE_TOKEN_WITH_COOKIE,\n    payload: token\n  };\n};","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/store/actions/authActions.js"],"names":["actionTypes","axios","Cookie","loginStart","type","LOGIN_START","loginSuccess","idToken","createCookie","LOGIN_SUCCESS","payload","userToken","login","email","password","dispatch","post","returnSecureToken","then","response","data","error","LOGIN_FAIL","set","expires","destroyCookie","console","log","remove","signupSuccess","SIGNUP_USER_SUCCESS","signup","SIGNUP_USER_FAIL","clearError","CLEAR_ERRORS","logoutUser","LOGOUT_USER","updateSavedToken","token","UPDATE_TOKEN_WITH_COOKIE"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\"\nimport axios from \"axios\"\nimport Cookie from \"js-cookie\"\n\n// ********** start of login actions\nconst loginStart=()=>{\n  return{\n    type: actionTypes.LOGIN_START\n  }\n}\n\nconst loginSuccess=(idToken)=>{\n  createCookie(idToken)\n  return {\n    type:actionTypes.LOGIN_SUCCESS,\n    payload:{\n      userToken: idToken\n    }\n  }\n}\nexport const login=(email, password)=>{\n  return (dispatch)=>{\n    loginStart()\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`,{email, password, returnSecureToken:true})\n    .then(response=>{\n      dispatch(loginSuccess(response.data.idToken))\n    })\n    .catch(error=>{\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      })\n    })\n  }\n}\n\n//**handling persistant storage */ \nconst createCookie=(idToken)=>{\n  // creates cookie that expires in an hour\n  Cookie.set(\"userToken\",idToken,{expires:1/24})\n}\n\nconst destroyCookie=()=>{\n  console.log(\"deleting cookie\")\n  // deletes cookie when user logs out\n  Cookie.remove(\"userToken\")\n}\n\n// *********end of login actions\n\n// *********start of signup actions\nconst signupSuccess=(idToken)=>{\n  createCookie(idToken)\n  return {\n    type:actionTypes.SIGNUP_USER_SUCCESS,\n    payload:{\n      userToken: idToken\n    }\n  }\n}\nexport const signup=(email, password)=>{\n  return (dispatch)=>{\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`,{email, password, returnSecureToken:true})\n    .then(response=>{\n      dispatch(signupSuccess(response.data.idToken))\n    })\n    .catch(error=>{\n      dispatch({ type: actionTypes.SIGNUP_USER_FAIL })\n    })\n  }\n}\n\n// *******end of signup actions\nexport const clearError=()=>{\n  return{\n    type: actionTypes.CLEAR_ERRORS\n  }\n}\n\n//****** */\nexport const logoutUser=()=>{\n  destroyCookie()\n  return{\n    type: actionTypes.LOGOUT_USER\n  }\n}\n\n//****** */\n\n// saving userToken\nexport const updateSavedToken=(token)=>{\n  return {\n    type: actionTypes.UPDATE_TOKEN_WITH_COOKIE,\n    payload:token\n  }\n}"]},"metadata":{},"sourceType":"module"}