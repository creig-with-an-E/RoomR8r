{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/src/modal/addReviewForm.js\";\nimport React, { Component, useState } from \"react\";\nimport ModalComponent from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport Script from 'react-load-script';\nimport HorizontalStepper from \"../stepper\";\nimport { Button } from \"../components\";\n\nvar addReviewForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(addReviewForm, _Component);\n\n  function addReviewForm(props) {\n    var _this;\n\n    _classCallCheck(this, addReviewForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(addReviewForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rating: 0,\n      postal_code: \"\",\n      street_number: \"\",\n      apartment_number: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      comment: \"\",\n      city: \"\"\n      /*** start of google maps functions**/\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePlaceSelect\", function () {\n      // Extract City From Address Object\n      var addressObject = _this.autocomplete.getPlace();\n\n      var address = addressObject.address_components; // Check if address is valid\n\n      if (address) {\n        console.log(address);\n\n        _this.setState({\n          city: address[0].long_name\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.props.hideModalHandle();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputChange\", function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addReviewHandle\", function (event) {\n      event.preventDefault();\n      axios.post(\"https://accomo-rater.firebaseio.com/landlord_data.json?auth=\".concat(_this.props.userToken), {\n        \"postal_code\": _this.state.postal_code,\n        \"address\": {\n          \"street_number\": _this.state.street_number,\n          \"apartment_number\": _this.state.apartment_number\n        },\n        \"landlord_bio\": {\n          \"first_name\": _this.state.first_name,\n          \"last_name\": _this.state.last_name\n        },\n        \"comment\": _this.state.comment,\n        \"rating\": _this.state.rating\n      }).then(function (response) {\n        _this.handleClose();\n      });\n    });\n\n    _this.handleScriptLoad = _this.handleScriptLoad.bind(_assertThisInitialized(_this));\n    _this.handlePlaceSelect = _this.handlePlaceSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(addReviewForm, [{\n    key: \"handleScriptLoad\",\n    value: function handleScriptLoad() {\n      /***loads google script on load */\n      // Declare Options For Autocomplete\n      var options = {// types: ['(cities)'],\n      }; // Initialize Google Autocomplete\n\n      this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n      // place fields that are returned to just the address components.\n\n      this.autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n      this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var para = React.createElement(\"p\", {\n        style: {\n          color: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"This is a paragraph\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Script, {\n        url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\",\n        onLoad: this.handleScriptLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(ModalComponent, {\n        \"aria-labelledby\": \"transition-modal-title\",\n        \"aria-describedby\": \"transition-modal-description\",\n        style: styles.modal,\n        open: this.props.modalVisible,\n        onClose: this.handleClose,\n        closeAfterTransition: true,\n        BackdropComponent: Backdrop,\n        BackdropProps: {\n          timeout: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Fade, {\n        \"in\": this.props.modalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: styles.heading,\n        id: \"transition-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Add Review\"), React.createElement(HorizontalStepper, {\n        closeModal: this.handleClose,\n        para: para,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return addReviewForm;\n}(Component);\n\n;\nvar styles = {\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(44,54,94,0.8)\"\n  },\n  paper: {\n    margin: \"0 auto\",\n    alignContent: 'center',\n    borderRadius: \"10px\",\n    background: \"rgb(44,54,94)\",\n    width: 600,\n    padding: \"4px, 4px, 3px\"\n  },\n  input: {\n    padding: 15,\n    borderRadius: \"5px\",\n    display: \"block\",\n    margin: \"15px auto\",\n    width: 200\n  },\n  heading: {\n    textAlign: \"center\",\n    fontFamily: \"Poppins, sans-serif\",\n    color: \"#fffff0\"\n  }\n};\nexport default addReviewForm;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/src/modal/addReviewForm.js"],"names":["React","Component","useState","ModalComponent","Backdrop","Fade","Rating","axios","Script","HorizontalStepper","Button","addReviewForm","props","rating","postal_code","street_number","apartment_number","first_name","last_name","comment","city","addressObject","autocomplete","getPlace","address","address_components","console","log","setState","long_name","hideModalHandle","event","target","name","value","preventDefault","post","userToken","state","then","response","handleClose","handleScriptLoad","bind","handlePlaceSelect","options","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","para","color","styles","modal","modalVisible","timeout","paper","heading","display","alignItems","justifyContent","backgroundColor","margin","alignContent","borderRadius","background","width","padding","input","textAlign","fontFamily"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAQC,iBAAR,MAA+B,YAA/B;AACA,SAASC,MAAT,QAAuB,eAAvB;;IAEQC,a;;;;;AACN,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;;AADgB,4DAMZ;AACJC,MAAAA,MAAM,EAAC,CADH;AAEJC,MAAAA,WAAW,EAAC,EAFR;AAGJC,MAAAA,aAAa,EAAC,EAHV;AAIJC,MAAAA,gBAAgB,EAAC,EAJb;AAKJC,MAAAA,UAAU,EAAC,EALP;AAMJC,MAAAA,SAAS,EAAC,EANN;AAOJC,MAAAA,OAAO,EAAC,EAPJ;AAQJC,MAAAA,IAAI,EAAC;AAEP;;AAVM,KANY;;AAAA,wEAuCA,YAAK;AACrB;AACA,UAAIC,aAAa,GAAG,MAAKC,YAAL,CAAkBC,QAAlB,EAApB;;AACA,UAAIC,OAAO,GAAGH,aAAa,CAACI,kBAA5B,CAHqB,CAKrB;;AACA,UAAID,OAAJ,EAAa;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,cAAKI,QAAL,CACE;AACER,UAAAA,IAAI,EAAEI,OAAO,CAAC,CAAD,CAAP,CAAWK;AADnB,SADF;AAKD;AACF,KArDiB;;AAAA,kEAyDJ,YAAM;AAClB,YAAKjB,KAAL,CAAWkB,eAAX;AACD,KA3DiB;;AAAA,oEA6DJ,UAACC,KAAD,EAAS;AACrB,YAAKH,QAAL,qBACGG,KAAK,CAACC,MAAN,CAAaC,IADhB,EACuBF,KAAK,CAACC,MAAN,CAAaE,KADpC;AAGD,KAjEiB;;AAAA,sEAmEF,UAACH,KAAD,EAAS;AACvBA,MAAAA,KAAK,CAACI,cAAN;AACA5B,MAAAA,KAAK,CAAC6B,IAAN,uEACE,MAAKxB,KAAL,CAAWyB,SADb,GACyB;AACrB,uBAAc,MAAKC,KAAL,CAAWxB,WADJ;AAErB,mBAAU;AACR,2BAAgB,MAAKwB,KAAL,CAAWvB,aADnB;AAER,8BAAmB,MAAKuB,KAAL,CAAWtB;AAFtB,SAFW;AAMrB,wBAAe;AACb,wBAAa,MAAKsB,KAAL,CAAWrB,UADX;AAEb,uBAAY,MAAKqB,KAAL,CAAWpB;AAFV,SANM;AAUrB,mBAAU,MAAKoB,KAAL,CAAWnB,OAVA;AAWrB,kBAAU,MAAKmB,KAAL,CAAWzB;AAXA,OADzB,EAcE0B,IAdF,CAcO,UAAAC,QAAQ,EAAE;AACb,cAAKC,WAAL;AACH,OAhBD;AAiBD,KAtFiB;;AAEd,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AACF,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AAHgB;AAIjB;;;;uCAciB;AAChB;AACA;AACA,UAAME,OAAO,GAAG,CACd;AADc,OAAhB,CAHgB,CAOhB;;AACA,WAAKvB,YAAL,GAAoB,IAAIwB,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAClBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADkB,EAElBN,OAFkB,CAApB,CARgB,CAahB;AACA;;AACA,WAAKvB,YAAL,CAAkB8B,SAAlB,CAA4B,CAAC,oBAAD,CAA5B,EAfgB,CAiBhB;;AACA,WAAK9B,YAAL,CAAkB+B,WAAlB,CAA8B,eAA9B,EAA+C,KAAKT,iBAApD;AACD;;;6BAkDO;AACN,UAAMU,IAAI,GAAG;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAb;AACF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAC,sGADN;AAEI,QAAA,MAAM,EAAE,KAAKb,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME,oBAAC,cAAD;AAAgB,2BAAgB,wBAAhC;AACE,4BAAiB,8BADnB;AAEE,QAAA,KAAK,EAAEc,MAAM,CAACC,KAFhB;AAGE,QAAA,IAAI,EAAE,KAAK7C,KAAL,CAAW8C,YAHnB;AAIE,QAAA,OAAO,EAAE,KAAKjB,WAJhB;AAKE,QAAA,oBAAoB,MALtB;AAME,QAAA,iBAAiB,EAAErC,QANrB;AAOE,QAAA,aAAa,EAAE;AACbuD,UAAAA,OAAO,EAAE;AADI,SAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE,oBAAC,IAAD;AAAM,cAAI,KAAK/C,KAAL,CAAW8C,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAEF,MAAM,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAAlB;AACE,QAAA,EAAE,EAAC,wBADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAuCE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKpB,WAApC;AAAiD,QAAA,IAAI,EAAEa,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCF,CADF,CAXF,CANF,CADF;AA+DE;;;;EAzJ0BrD,S;;AA0J7B;AAED,IAAMuD,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLK,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE,QAHX;AAILC,IAAAA,eAAe,EAAE;AAJZ,GADM;AAObL,EAAAA,KAAK,EAAE;AACLM,IAAAA,MAAM,EAAE,QADH;AAELC,IAAAA,YAAY,EAAE,QAFT;AAGLC,IAAAA,YAAY,EAAE,MAHT;AAILC,IAAAA,UAAU,EAAE,eAJP;AAKLC,IAAAA,KAAK,EAAE,GALF;AAMLC,IAAAA,OAAO,EAAE;AANJ,GAPM;AAebC,EAAAA,KAAK,EAAE;AACLD,IAAAA,OAAO,EAAE,EADJ;AAELH,IAAAA,YAAY,EAAE,KAFT;AAGLN,IAAAA,OAAO,EAAE,OAHJ;AAILI,IAAAA,MAAM,EAAE,WAJH;AAKLI,IAAAA,KAAK,EAAC;AALD,GAfM;AAsBbT,EAAAA,OAAO,EAAC;AACNY,IAAAA,SAAS,EAAE,QADL;AAENC,IAAAA,UAAU,EAAE,qBAFN;AAGNnB,IAAAA,KAAK,EAAE;AAHD;AAtBK,CAAf;AA6BA,eAAe5C,aAAf","sourcesContent":["import React, { Component,useState } from \"react\";\n\nimport ModalComponent from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\"\nimport Script from 'react-load-script';\n\nimport  HorizontalStepper from \"../stepper\"\nimport { Button } from \"../components\";\n\n  class addReviewForm extends Component{\n  constructor(props){\n    super(props)\n      this.handleScriptLoad = this.handleScriptLoad.bind(this)\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this)\n  }\n\n  state={\n    rating:0,\n    postal_code:\"\",\n    street_number:\"\",\n    apartment_number:\"\",\n    first_name:\"\",\n    last_name:\"\",\n    comment:\"\",\n    city:\"\"\n  }\n  /*** start of google maps functions**/ \n\n  handleScriptLoad(){\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    const options = {\n      // types: ['(cities)'],\n    };\n\n    // Initialize Google Autocomplete\n    this.autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n\n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    this.autocomplete.setFields(['address_components']);\n\n    // Fire Event when a suggested name is selected\n    this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n  }\n\n  handlePlaceSelect=()=> {\n    // Extract City From Address Object\n    let addressObject = this.autocomplete.getPlace();\n    let address = addressObject.address_components;\n\n    // Check if address is valid\n    if (address) {\n      console.log(address)\n      this.setState(\n        {\n          city: address[0].long_name,\n        }\n      );\n    }\n  }\n\n\n\n  handleClose = () => {\n    this.props.hideModalHandle();\n  };\n\n  onInputChange=(event)=>{\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  addReviewHandle=(event)=>{\n    event.preventDefault()\n    axios.post(`https://accomo-rater.firebaseio.com/landlord_data.json?auth=${\n      this.props.userToken}`,{\n        \"postal_code\":this.state.postal_code,\n        \"address\":{\n          \"street_number\":this.state.street_number,\n          \"apartment_number\":this.state.apartment_number\n          },\n        \"landlord_bio\":{\n          \"first_name\":this.state.first_name,\n          \"last_name\":this.state.last_name\n        },\n        \"comment\":this.state.comment,\n        \"rating\": this.state.rating\n        }\n    ).then(response=>{\n        this.handleClose()\n    })\n  }\n  render(){\n    const para = <p style={{color:\"#fff\"}}>This is a paragraph</p>\n  return (\n    <div>\n      {/* loading google maps script */}\n      <Script\n        url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\"\n          onLoad={this.handleScriptLoad}\n        />  \n      <ModalComponent aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        style={styles.modal}\n        open={this.props.modalVisible}\n        onClose={this.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={this.props.modalVisible}>\n          <div style={styles.paper}>\n            <h2 style={styles.heading}\n              id=\"transition-modal-title\" >\n              Add Review\n            </h2>\n            {/* <form onSubmit={this.addReviewHandle}>\n              <input onChange={this.onInputChange} style={styles.input} \n                type=\"text\" value={this.state.postal_code}\n                required placeholder=\"Post Code\" name=\"postal_code\"/>\n              <input onChange={this.onInputChange}  style={styles.input} \n                type=\"text\" name=\"street_number\"\n                required placeholder=\"Street address\" value={this.state.street_number} />\n              <input onChange={this.onInputChange}  style={styles.input} \n                type=\"text\" placeholder=\"Apartment Number\"\n                name=\"apartment_number\" value={this.state.apartment_number}\n              />\n              <input onChange={this.onInputChange} style={styles.input}\n                type=\"text\" required\n                placeholder=\"City\"\n                name=\"city\" value={this.state.city}\n              />\n                <input onChange={this.onInputChange} style={styles.input} \n                  placeholder=\"landlord's name\" name=\"first_name\" \n                  value={this.state.first_name}/>\n                <textarea onChange={this.onInputChange} style={styles.input} placeholder=\"Feedback\" name=\"comment\" value={this.state.comment}/>\n              <span style={{\n                margin: \"15px auto\",\n                justifyContent: \"center\",\n                display: \"flex\"\n              }}>\n                <Rating\n                  value={this.state.rating}\n                  onChange={(event, newValue) => this.setState({rating: newValue})}\n                />\n              </span>\n              <Button onClick={this.addReviewHandle} style={styles.buttonStyle}>\n                Submit\n              </Button>\n            </form> */}\n            <HorizontalStepper closeModal={this.handleClose} para={para}/>\n          </div>\n        </Fade>\n      </ModalComponent>\n    </div>\n  )}\n};\n\nconst styles = {\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(44,54,94,0.8)\"\n  },\n  paper: {\n    margin: \"0 auto\",\n    alignContent: 'center',\n    borderRadius: \"10px\",\n    background: \"rgb(44,54,94)\",\n    width: 600,\n    padding: \"4px, 4px, 3px\"  \n  },\n  input: {\n    padding: 15,\n    borderRadius: \"5px\",\n    display: \"block\",\n    margin: \"15px auto\",\n    width:200\n  },\n  heading:{\n    textAlign: \"center\",\n    fontFamily: \"Poppins, sans-serif\",\n    color: \"#fffff0\"\n  }\n};\n\nexport default addReviewForm;\n"]},"metadata":{},"sourceType":"module"}