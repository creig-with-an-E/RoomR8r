{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/pages/index.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../src/components/spinner\";\nimport Toolbar from \"../src/components/toolbar\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport Card from \"../src/components/card\";\nimport * as appActions from \"../store/actions/appActions\";\nimport SearchBar from \"../src/components/searchBar\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: \"\"\n    });\n\n    _defineProperty(this, \"onAddressChangeHandler\", input => {\n      //handles user input and stores in local state\n      this.setState({\n        address: input.toUpperCase()\n      });\n    });\n\n    _defineProperty(this, \"searchByAddressHandler\", event => {\n      this.props.findByAddress(this.props.userToken, this.state.address);\n    });\n  }\n\n  componentDidMount() {\n    !this.props.userToken ? Router.push(\"/login\") : null;\n  }\n\n  render() {\n    const cards = this.props.searchResults.map(element => React.createElement(Card, {\n      data: element,\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n    const spinner = !this.props.loading ? null : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      style: styles.containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: styles.headerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Because not all landlords are built the same\")), React.createElement(\"div\", {\n      style: {\n        marginTop: \"5px\",\n        padding: \"20px\",\n        width: \"60%\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      placeholder: \"Enter address\",\n      value: this.state.address,\n      onChange: this.onAddressChangeHandler,\n      onRequestSearch: this.searchByAddressHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), spinner), cards.length !== 0 ? React.createElement(\"div\", {\n      style: {\n        overflowY: \"scroll\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, cards) : null);\n  }\n\n}\n\nconst styles = {\n  containerStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fffffa\"\n  },\n  headerStyle: {\n    color: \"#2C365E\",\n    textAlign: \"center\",\n    fontFamily: 'Fira Sans, sans-serif',\n    fontWeight: \"bold\"\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    userToken: state.auth.userToken,\n    searchResults: state.app.searchResults,\n    loading: state.app.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findByAddress: (userToken, address) => dispatch(appActions.findReviewByAddress(userToken, address))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/pages/index.js"],"names":["React","Component","Spinner","Toolbar","connect","Router","Card","appActions","SearchBar","App","address","input","setState","toUpperCase","event","props","findByAddress","userToken","state","componentDidMount","push","render","cards","searchResults","map","element","id","spinner","loading","styles","containerStyle","marginTop","headerStyle","padding","width","textAlign","onAddressChangeHandler","searchByAddressHandler","length","overflowY","display","alignItems","flexDirection","height","justifyContent","backgroundColor","color","fontFamily","fontWeight","mapStateToProps","auth","app","mapDispatchToProps","dispatch","findReviewByAddress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Spinner from \"../src/components/spinner\";\nimport Toolbar from \"../src/components/toolbar\"\n\nimport {connect} from \"react-redux\"\nimport Router from \"next/router\"\nimport Card from \"../src/components/card\"\n\nimport * as appActions from \"../store/actions/appActions\"\n\nimport SearchBar from \"../src/components/searchBar\";\n\nclass App extends Component {\n  componentDidMount(){\n    !this.props.userToken? Router.push(\"/login\") : null\n  }\n  state = {\n    address: \"\",\n  };\n\n  onAddressChangeHandler = input => {\n    //handles user input and stores in local state\n    this.setState({\n      address: input.toUpperCase()\n    });\n  };\n\n  searchByAddressHandler = event => {\n    this.props.findByAddress(this.props.userToken, this.state.address)\n  }\n\n  render() {\n    const cards = this.props.searchResults.map(element=><Card data={element} key={element.id} />)\n    const spinner = !this.props.loading ? null : <Spinner />;\n    return (\n      <div style={styles.containerStyle}>\n        <Toolbar />\n        <div style={{marginTop:\"60px\"}}>\n          <h2 style={styles.headerStyle}>\n            Because not all landlords are built the same\n          </h2>\n        </div>\n        <div\n          style={{\n            marginTop:\"5px\",\n            padding: \"20px\",\n            width: \"60%\",\n            textAlign: \"center\",\n          }}\n        >\n          <SearchBar\n            placeholder=\"Enter address\"\n            value={this.state.address}\n            onChange={this.onAddressChangeHandler}\n            onRequestSearch={this.searchByAddressHandler}\n          />\n          {spinner}\n        </div>            \n        { cards.length !== 0 ? <div style={{overflowY:\"scroll\", width:\"100%\"}}>{cards}</div>: null}\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  containerStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fffffa\"\n  },\n  headerStyle:{\n    color: \"#2C365E\", \n    textAlign: \"center\",\n    fontFamily:'Fira Sans, sans-serif',\n    fontWeight:\"bold\"\n  },\n};\n\nconst mapStateToProps=(state)=>{\n  return{\n    userToken: state.auth.userToken,\n    searchResults:state.app.searchResults,\n    loading: state.app.loading\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    findByAddress:(userToken,address)=>dispatch(appActions.findReviewByAddress(userToken,address))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}