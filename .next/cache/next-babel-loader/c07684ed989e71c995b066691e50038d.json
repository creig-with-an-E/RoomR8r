{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nexport default class MapFunctions {\n  constructor() {\n    _defineProperty(this, \"handleScriptLoad\", () => {\n      /***loads google script on load */\n      // Declare Options For Autocomplete\n      const options = {// types: ['(cities)'],\n      }; // Initialize Google Autocomplete\n\n      const autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n      // place fields that are returned to just the address components.\n\n      autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n      autocomplete.addListener('place_changed', handlePlaceSelect);\n    });\n\n    _defineProperty(this, \"handlePlaceSelect\", () => {\n      // Extract City From Address Object\n      let addressObject = autocomplete.getPlace();\n      let address = addressObject.address_components; // Check if address is valid\n\n      if (address) {\n        console.log(address); // this.setState(\n        // {\n        //   city: address[0].long_name,\n        // }\n        // );\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/lib/googlePlaceFunctions.js"],"names":["MapFunctions","options","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","console","log"],"mappings":";AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,8CACf,MAAI;AACnB;AACA;AACA,YAAMC,OAAO,GAAG,CACd;AADc,OAAhB,CAHmB,CAMnB;;AACC,YAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACpBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADoB,EAEpBP,OAFoB,CAArB,CAPkB,CAYnB;AACA;;AACAC,MAAAA,YAAY,CAACO,SAAb,CAAuB,CAAC,oBAAD,CAAvB,EAdmB,CAgBnB;;AACAP,MAAAA,YAAY,CAACQ,WAAb,CAAyB,eAAzB,EAA0CC,iBAA1C;AACC,KAnB6B;;AAAA,+CAqBb,MAAI;AACrB;AACA,UAAIC,aAAa,GAAGV,YAAY,CAACW,QAAb,EAApB;AACA,UAAIC,OAAO,GAAGF,aAAa,CAACG,kBAA5B,CAHqB,CAKrB;;AACA,UAAID,OAAJ,EAAa;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EADW,CAEX;AACA;AACA;AACA;AACA;AACD;AACA,KAnC6B;AAAA;;AAAA","sourcesContent":["export default class MapFunctions {\n  handleScriptLoad=()=>{\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    const options = {\n      // types: ['(cities)'],\n    };\n    // Initialize Google Autocomplete\n     const autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n    \n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_components']);\n    \n    // Fire Event when a suggested name is selected\n    autocomplete.addListener('place_changed', handlePlaceSelect);\n    }\n    \n   handlePlaceSelect=()=>{\n    // Extract City From Address Object\n    let addressObject = autocomplete.getPlace();\n    let address = addressObject.address_components;\n    \n    // Check if address is valid\n    if (address) {\n      console.log(address)\n      // this.setState(\n      // {\n      //   city: address[0].long_name,\n      // }\n      // );\n    }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}