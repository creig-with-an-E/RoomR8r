{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/index.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Script from 'react-load-script';\nimport { SearchBar } from \"../components\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {// width: \"90%\"\n    },\n    button: {\n      marginRight: theme.spacing.unit,\n      \"& $disabled\": {\n        backgroundColor: \"red\"\n      }\n    },\n    step: {},\n    stepIcon: {\n      color: \"#FF5941\"\n    },\n    completed: {}\n  };\n};\n\nvar handleScriptLoad = function handleScriptLoad() {\n  alert(\"loaded\");\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n\n  var options = {// types: ['(cities)'],\n  }; // Initialize Google Autocomplete\n\n  var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n\n  autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n  autocomplete.addListener('place_changed', handlePlaceSelect);\n};\n\nvar handlePlaceSelect = function handlePlaceSelect() {\n  console.log(\"handle place select called\"); // Extract City From Address Object\n\n  var addressObject = autocomplete.getPlace();\n  var address = addressObject.address_components; // Check if address is valid\n\n  if (address) {\n    console.log(address); // this.setState(\n    //   {\n    //     city: address[0].long_name,\n    //   }\n    // );\n  }\n};\n\nvar getSteps = function getSteps() {\n  return ['Location settings', 'Add land lord details', 'Verify details'];\n};\n\nvar getStepContent = function getStepContent(step) {\n  switch (step) {\n    case 0:\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Script, {\n        url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\",\n        onLoad: handleScriptLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(SearchBar, {\n        id: \"autocomplete\",\n        value: address,\n        style: {\n          backgroundColor: \"#fffffa\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n};\n\nvar HorizontalStepper = function HorizontalStepper(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new _Set()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      skipped = _React$useState4[0],\n      setSkipped = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      address = _React$useState6[0],\n      setAddress = _React$useState6[1];\n\n  var steps = getSteps();\n\n  function isStepOptional(step) {\n    return step === null;\n  }\n\n  function isStepSkipped(step) {\n    return skipped.has(step);\n  }\n\n  function handleNext() {\n    var newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new _Set(newSkipped.values());\n      newSkipped[\"delete\"](activeStep);\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(newSkipped);\n  }\n\n  function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  }\n\n  function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n    setSkipped(function (prevSkipped) {\n      var newSkipped = new _Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, steps.map(function (label, index) {\n    var stepProps = {};\n    var labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return React.createElement(Step, _extends({\n      key: label\n    }, stepProps, {\n      classes: {\n        root: classes.step,\n        completed: classes.completed,\n        active: classes.active\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(StepLabel, _extends({}, labelProps, {\n      StepIconProps: {\n        classes: {\n          root: classes.stepIcon\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    style: {\n      height: 300,\n      display: \"flex\",\n      alignItems: 'center',\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: \"instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Review complete.\", React.createElement(\"a\", {\n    className: classes.completeButton,\n    onClick: props.closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Close\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, getStepContent(activeStep)), React.createElement(\"div\", {\n    style: {\n      marginTop: 60,\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: \"#ccc\"\n    },\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n};\n\nexport default withStyles(styles)(HorizontalStepper);","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/index.js"],"names":["React","withStyles","Stepper","Step","StepLabel","Button","Typography","Script","SearchBar","styles","theme","root","button","marginRight","spacing","unit","backgroundColor","step","stepIcon","color","completed","handleScriptLoad","alert","options","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","console","log","addressObject","getPlace","address","address_components","getSteps","getStepContent","HorizontalStepper","props","useState","activeStep","setActiveStep","skipped","setSkipped","setAddress","steps","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","classes","map","label","index","stepProps","labelProps","optional","active","height","display","alignItems","justifyContent","length","completeButton","closeModal","instructions","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Script from 'react-load-script';\n\nimport {SearchBar } from \"../components\"\nconst styles = theme => ({\n  root: {\n    // width: \"90%\"\n  },\n  button: {\n    marginRight: theme.spacing.unit,\n    \"& $disabled\":{\n      backgroundColor:\"red\"\n    },\n\n  },\n  step: {\n\n  },\n  stepIcon:{\n    color:\"#FF5941\"\n  },\n  completed:{}\n});\n\n\n\nconst handleScriptLoad=()=>{\n  alert(\"loaded\")\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n  const options = {\n    // types: ['(cities)'],\n  };\n\n  // Initialize Google Autocomplete\n   let autocomplete = new google.maps.places.Autocomplete(\n    document.getElementById('autocomplete'),\n    options,\n  );\n\n  // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n  autocomplete.setFields(['address_components']);\n\n  // Fire Event when a suggested name is selected\n  autocomplete.addListener('place_changed', handlePlaceSelect);\n}\n\nconst handlePlaceSelect=()=> {\n  console.log(\"handle place select called\")\n  // Extract City From Address Object\n  let addressObject = autocomplete.getPlace();\n  let address = addressObject.address_components;\n\n  // Check if address is valid\n  if (address) {\n    console.log(address)\n    // this.setState(\n    //   {\n    //     city: address[0].long_name,\n    //   }\n    // );\n  }\n}\n\nconst getSteps=()=>{\n  return ['Location settings', 'Add land lord details', 'Verify details'];\n}\n\nconst getStepContent=(step)=>{\n  switch (step) {\n    case 0:\n      return (<div>\n            {/* loading google maps script */}\n            <Script\n              url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\"\n              onLoad={handleScriptLoad}\n            />  \n            <SearchBar id=\"autocomplete\" value={address} style={{ backgroundColor:\"#fffffa\"}} />\n          </div>)\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst HorizontalStepper=(props)=>{\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [address, setAddress] = React.useState(\"\")\n  const steps = getSteps();\n\n  function isStepOptional(step) {\n    return step === null;\n  }\n\n  function isStepSkipped(step) {\n    return skipped.has(step);\n  }\n\n  function handleNext() {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleSkip() {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} >\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps} classes={{\n              root: classes.step,\n              completed: classes.completed,\n              active: classes.active\n            }}>\n              <StepLabel {...labelProps} StepIconProps={{\n                  classes: { root: classes.stepIcon }\n                  }}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div style={{ height:300, display:\"flex\", alignItems: 'center', justifyContent:\"center\"}}>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className=\"instructions\">\n              Review complete.<a className={classes.completeButton} onClick={props.closeModal}>Close</a>\n            </Typography>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div style={{marginTop:60, textAlign:\"center\"}}>\n              <Button style={{backgroundColor:\"#ccc\"}} disabled={activeStep === 0}  onClick={handleBack} className={classes.button} color=\"primary\">\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(HorizontalStepper)"]},"metadata":{},"sourceType":"module"}