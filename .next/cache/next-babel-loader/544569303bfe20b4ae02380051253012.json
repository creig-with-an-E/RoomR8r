{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from \"react\";\n\nclass googlePlaceFunctions extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: {}\n    });\n  }\n\n}\n\n_defineProperty(googlePlaceFunctions, \"handleScriptLoad\", () => {\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n  const options = {\n    // types: ['(cities)'],\n    componentRestrictions: {\n      country: 'ca'\n    }\n  }; // Initialize Google Autocomplete\n\n  const autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n\n  autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n  autocomplete.addListener('place_changed', () => googlePlaceFunctions.handlePlaceSelect(autocomplete));\n});\n\n_defineProperty(googlePlaceFunctions, \"handlePlaceSelect\", autocomplete => {\n  // Extract City From Address Object\n  let addressObject = autocomplete.getPlace();\n  let address = addressObject.address_components; // Check if address is valid\n\n  if (address) {\n    googlePlaceFunctions.constructor.setState({\n      // city: address[0].long_name,\n      address: address\n    });\n  }\n});\n\nexport default googlePlaceFunctions;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/lib/googlePlaceFunctions.js"],"names":["React","Component","googlePlaceFunctions","address","options","componentRestrictions","country","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address_components","constructor","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAMC,oBAAN,SAAmCD,SAAnC,CAA6C;AAAA;AAAA;;AAAA,mCACrC;AACJE,MAAAA,OAAO,EAAC;AADJ,KADqC;AAAA;;AAAA;;gBAAvCD,oB,sBAKoB,MAAI;AAC1B;AACA;AACA,QAAME,OAAO,GAAG;AACd;AACAC,IAAAA,qBAAqB,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV;AAFT,GAAhB,CAH0B,CAO1B;;AACC,QAAMC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACpBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADoB,EAEpBT,OAFoB,CAArB,CARyB,CAa1B;AACA;;AACAG,EAAAA,YAAY,CAACO,SAAb,CAAuB,CAAC,oBAAD,CAAvB,EAf0B,CAiB1B;;AACAP,EAAAA,YAAY,CAACQ,WAAb,CAAyB,eAAzB,EAA0C,MAvBxCb,oBAuB4C,CAAKc,iBAAL,CAAuBT,YAAvB,CAA9C;AACC,C;;gBAxBCL,oB,uBA0BsBK,YAAD,IAAgB;AACvC;AACA,MAAIU,aAAa,GAAGV,YAAY,CAACW,QAAb,EAApB;AACA,MAAIf,OAAO,GAAGc,aAAa,CAACE,kBAA5B,CAHuC,CAKvC;;AACA,MAAIhB,OAAJ,EAAa;AAhCXD,IAAAA,oBAiCA,CAAKkB,WAAL,CAAiBC,QAAjB,CACA;AACE;AACAlB,MAAAA,OAAO,EAAEA;AAFX,KADA;AAMD;AACA,C;;AAGL,eAAeD,oBAAf","sourcesContent":["import React,{Component} from \"react\"\n\nclass googlePlaceFunctions extends Component {\n  state={\n    address:{}\n  }\n\n  static handleScriptLoad=()=>{\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    const options = {\n      // types: ['(cities)'],\n      componentRestrictions: {country: 'ca'}\n    };\n    // Initialize Google Autocomplete\n     const autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n    \n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_components']);\n    \n    // Fire Event when a suggested name is selected\n    autocomplete.addListener('place_changed', ()=>this.handlePlaceSelect(autocomplete))\n    }\n    \n  static handlePlaceSelect=(autocomplete)=>{\n    // Extract City From Address Object\n    let addressObject = autocomplete.getPlace();\n    let address = addressObject.address_components;\n    \n    // Check if address is valid\n    if (address) {\n      this.constructor.setState(\n      {\n        // city: address[0].long_name,\n        address: address,\n      }\n      );\n    }\n    }\n}\n\nexport default googlePlaceFunctions"]},"metadata":{},"sourceType":"module"}