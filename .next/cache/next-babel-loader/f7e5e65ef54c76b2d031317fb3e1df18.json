{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js\";\nimport React, { Component } from 'react';\nimport { SearchBar } from \"../components\";\n\nvar GoogleMapsSearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GoogleMapsSearchBar, _Component);\n\n  function GoogleMapsSearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleMapsSearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleMapsSearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScriptLoad\", function () {\n      /***loads google script on load */\n      // Declare Options For Autocomplete\n      options = {// types: ['(cities)'],\n      }; // Initialize Google Autocomplete\n\n      _this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n      // place fields that are returned to just the address components.\n\n      autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n      autocomplete.addListener('place_changed', handlePlaceSelect);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePlaceSelect\", function () {\n      // Extract City From Address Object\n      var addressObject = autocomplete.getPlace();\n      var address = addressObject.address_components; // Check if address is valid\n\n      if (address) {\n        console.log(address); // this.setState(\n        // {\n        //   city: address[0].long_name,\n        // }\n        // );\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      address: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (input) {\n      _this.setState({\n        address: input\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(GoogleMapsSearchBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onChange: this.onChangeHandler,\n        placeholder: \"X5X-X5X\",\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GoogleMapsSearchBar;\n}(Component);\n\nexport default GoogleMapsSearchBar;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js"],"names":["React","Component","SearchBar","GoogleMapsSearchBar","options","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","console","log","input","setState","onChangeHandler","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,SAAR,QAAwB,eAAxB;;IAEMC,mB;;;;;;;;;;;;;;;;;;uEAEa,YAAI;AACnB;AACA;AACAC,MAAAA,OAAO,GAAG,CACR;AADQ,OAAV,CAHmB,CAMnB;;AACC,YAAKC,YAAL,GAAoB,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACnBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADmB,EAEnBP,OAFmB,CAApB,CAPkB,CAYnB;AACA;;AACAC,MAAAA,YAAY,CAACO,SAAb,CAAuB,CAAC,oBAAD,CAAvB,EAdmB,CAgBnB;;AACAP,MAAAA,YAAY,CAACQ,WAAb,CAAyB,eAAzB,EAA0CC,iBAA1C;AACC,K;;wEAEe,YAAI;AACpB;AACA,UAAIC,aAAa,GAAGV,YAAY,CAACW,QAAb,EAApB;AACA,UAAIC,OAAO,GAAGF,aAAa,CAACG,kBAA5B,CAHoB,CAKpB;;AACA,UAAID,OAAJ,EAAa;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EADW,CAEX;AACA;AACA;AACA;AACA;AACD;AACA,K;;4DACI;AACHA,MAAAA,OAAO,EAAC;AADL,K;;sEAGS,UAACI,KAAD,EAAS;AACvB,YAAKC,QAAL,CAAc;AAACL,QAAAA,OAAO,EAACI;AAAT,OAAd;AACD,K;;;;;;;6BAEO;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAE,KAAKE,eADjB;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EArD+BhB,S;;AAwDlC,eAAeE,mBAAf","sourcesContent":["import React,{Component} from 'react';\n\nimport {SearchBar} from \"../components\"\n\nclass GoogleMapsSearchBar extends Component{\n\n  handleScriptLoad=()=>{\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    options = {\n      // types: ['(cities)'],\n    };\n    // Initialize Google Autocomplete\n     this.autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n    \n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_components']);\n    \n    // Fire Event when a suggested name is selected\n    autocomplete.addListener('place_changed', handlePlaceSelect);\n    }\n    \n  handlePlaceSelect=()=>{\n    // Extract City From Address Object\n    let addressObject = autocomplete.getPlace();\n    let address = addressObject.address_components;\n    \n    // Check if address is valid\n    if (address) {\n      console.log(address)\n      // this.setState(\n      // {\n      //   city: address[0].long_name,\n      // }\n      // );\n    }\n    }\n  state ={\n      address:\"\"\n  }\n  onChangeHandler=(input)=>{\n    this.setState({address:input})\n  }\n\n  render(){\n    return(\n      <div>\n        <SearchBar\n          onChange={this.onChangeHandler}\n          placeholder=\"X5X-X5X\"\n          value={this.state.address}\n        />\n      </div>)\n  }\n}\n\nexport default GoogleMapsSearchBar"]},"metadata":{},"sourceType":"module"}