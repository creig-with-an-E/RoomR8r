{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\"; // ********** start of login actions\n\nconst loginStart = () => {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\n\nconst loginSuccess = idToken => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload: {\n      userToken: idToken\n    }\n  };\n};\n\nexport const login = (email, password) => {\n  return dispatch => {\n    loginStart();\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`, {\n      email,\n      password,\n      returnSecureToken: true\n    }).then(response => {\n      dispatch(loginSuccess(response.data.idToken));\n      localStorage.setItem(\"userToken\", response.data.idToken);\n    }).catch(error => {\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      });\n    });\n  };\n}; // *********end of login actions\n// signup actions\n\nexport const signup = (email, password) => {\n  return dispatch => {\n    loginStart();\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`, {\n      email,\n      password,\n      returnSecureToken: true\n    }).then(response => {\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          userToken: response.data.idToken\n        }\n      });\n      localStorage.setItem(\"userToken\", response.data.idToken);\n    }).catch(error => {\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      });\n    });\n  };\n};\nexport const clearError = () => {\n  return {\n    type: actionTypes.CLEAR_ERRORS\n  };\n};\nexport const logoutUser = () => {\n  localStorage.removeItem(\"userToken\");\n  return {\n    type: actionTypes.LOGOUT_USER\n  };\n};","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/store/actions/authActions.js"],"names":["actionTypes","axios","loginStart","type","LOGIN_START","loginSuccess","idToken","LOGIN_SUCCESS","payload","userToken","login","email","password","dispatch","post","returnSecureToken","then","response","data","localStorage","setItem","catch","error","LOGIN_FAIL","signup","clearError","CLEAR_ERRORS","logoutUser","removeItem","LOGOUT_USER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,UAAU,GAAC,MAAI;AACnB,SAAM;AACJC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADd,GAAN;AAGD,CAJD;;AAMA,MAAMC,YAAY,GAAEC,OAAD,IAAW;AAC5B,SAAO;AACLH,IAAAA,IAAI,EAACH,WAAW,CAACO,aADZ;AAELC,IAAAA,OAAO,EAAC;AACNC,MAAAA,SAAS,EAAEH;AADL;AAFH,GAAP;AAMD,CAPD;;AAQA,OAAO,MAAMI,KAAK,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACpC,SAAQC,QAAD,IAAY;AACjBX,IAAAA,UAAU;AACVD,IAAAA,KAAK,CAACa,IAAN,CAAY,mHAAZ,EAA+H;AAACH,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBG,MAAAA,iBAAiB,EAAC;AAApC,KAA/H,EACCC,IADD,CACMC,QAAQ,IAAE;AACdJ,MAAAA,QAAQ,CAACR,YAAY,CAACY,QAAQ,CAACC,IAAT,CAAcZ,OAAf,CAAb,CAAR;AACAa,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCH,QAAQ,CAACC,IAAT,CAAcZ,OAA/C;AACD,KAJD,EAKCe,KALD,CAKOC,KAAK,IAAE;AACZT,MAAAA,QAAQ,CAAC;AACPV,QAAAA,IAAI,EAAEH,WAAW,CAACuB;AADX,OAAD,CAAR;AAGD,KATD;AAUD,GAZD;AAaD,CAdM,C,CAgBP;AAEA;;AACA,OAAO,MAAMC,MAAM,GAAC,CAACb,KAAD,EAAQC,QAAR,KAAmB;AACrC,SAAQC,QAAD,IAAY;AACjBX,IAAAA,UAAU;AACVD,IAAAA,KAAK,CAACa,IAAN,CAAY,uGAAZ,EAAmH;AAACH,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBG,MAAAA,iBAAiB,EAAC;AAApC,KAAnH,EACCC,IADD,CACMC,QAAQ,IAAE;AACdJ,MAAAA,QAAQ,CAAC;AACPV,QAAAA,IAAI,EAACH,WAAW,CAACO,aADV;AAEPC,QAAAA,OAAO,EAAC;AACNC,UAAAA,SAAS,EAAEQ,QAAQ,CAACC,IAAT,CAAcZ;AADnB;AAFD,OAAD,CAAR;AAMAa,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCH,QAAQ,CAACC,IAAT,CAAcZ,OAA/C;AACD,KATD,EAUCe,KAVD,CAUOC,KAAK,IAAE;AACZT,MAAAA,QAAQ,CAAC;AACPV,QAAAA,IAAI,EAAEH,WAAW,CAACuB;AADX,OAAD,CAAR;AAGD,KAdD;AAeD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAME,UAAU,GAAC,MAAI;AAC1B,SAAM;AACJtB,IAAAA,IAAI,EAAEH,WAAW,CAAC0B;AADd,GAAN;AAGD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAC,MAAI;AAC1BR,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AAEA,SAAM;AACJzB,IAAAA,IAAI,EAAEH,WAAW,CAAC6B;AADd,GAAN;AAGD,CANM","sourcesContent":["import * as actionTypes from \"./actionTypes\"\nimport axios from \"axios\"\n\n// ********** start of login actions\nconst loginStart=()=>{\n  return{\n    type: actionTypes.LOGIN_START\n  }\n}\n\nconst loginSuccess=(idToken)=>{\n  return {\n    type:actionTypes.LOGIN_SUCCESS,\n    payload:{\n      userToken: idToken\n    }\n  }\n}\nexport const login=(email, password)=>{\n  return (dispatch)=>{\n    loginStart()\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`,{email, password, returnSecureToken:true})\n    .then(response=>{\n      dispatch(loginSuccess(response.data.idToken))\n      localStorage.setItem(\"userToken\",response.data.idToken)\n    })\n    .catch(error=>{\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      })\n    })\n  }\n}\n\n// *********end of login actions\n\n// signup actions\nexport const signup=(email, password)=>{\n  return (dispatch)=>{\n    loginStart()\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDY95FpDC9eJ3W5gZrZrvcAH3zVirelFzI`,{email, password, returnSecureToken:true})\n    .then(response=>{\n      dispatch({\n        type:actionTypes.LOGIN_SUCCESS,\n        payload:{\n          userToken: response.data.idToken\n        }\n      })\n      localStorage.setItem(\"userToken\",response.data.idToken)\n    })\n    .catch(error=>{\n      dispatch({\n        type: actionTypes.LOGIN_FAIL\n      })\n    })\n  }\n}\n\nexport const clearError=()=>{\n  return{\n    type: actionTypes.CLEAR_ERRORS\n  }\n}\n\nexport const logoutUser=()=>{\n  localStorage.removeItem(\"userToken\")\n\n  return{\n    type: actionTypes.LOGOUT_USER\n  }\n}"]},"metadata":{},"sourceType":"module"}