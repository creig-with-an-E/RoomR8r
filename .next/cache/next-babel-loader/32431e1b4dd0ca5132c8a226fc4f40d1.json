{"ast":null,"code":"export const handleScriptLoad = () => {\n  alert(\"loaded\");\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n\n  const options = {// types: ['(cities)'],\n  }; // Initialize Google Autocomplete\n\n  let autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n\n  autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n  autocomplete.addListener('place_changed', handlePlaceSelect);\n};\nexport const handlePlaceSelect = () => {\n  // Extract City From Address Object\n  let addressObject = autocomplete.getPlace();\n  let address = addressObject.address_components; // Check if address is valid\n\n  if (address) {\n    console.log(address);\n    this.setState({\n      city: address[0].long_name\n    });\n  }\n};","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/lib/googlePlaceFunctions.js"],"names":["handleScriptLoad","alert","options","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","console","log","setState","city","long_name"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAC,MAAI;AAC9BC,EAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,CACd;AADc,GAAhB,CAJ8B,CAQ9B;;AACC,MAAIC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAClBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADkB,EAElBP,OAFkB,CAAnB,CAT6B,CAc9B;AACA;;AACAC,EAAAA,YAAY,CAACO,SAAb,CAAuB,CAAC,oBAAD,CAAvB,EAhB8B,CAkB9B;;AACAP,EAAAA,YAAY,CAACQ,WAAb,CAAyB,eAAzB,EAA0CC,iBAA1C;AACC,CApBE;AAsBP,OAAO,MAAMA,iBAAiB,GAAC,MAAK;AAChC;AACA,MAAIC,aAAa,GAAGV,YAAY,CAACW,QAAb,EAApB;AACA,MAAIC,OAAO,GAAGF,aAAa,CAACG,kBAA5B,CAHgC,CAKhC;;AACA,MAAID,OAAJ,EAAa;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SAAKI,QAAL,CACA;AACEC,MAAAA,IAAI,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWM;AADnB,KADA;AAKD;AACA,CAdE","sourcesContent":["export const handleScriptLoad=()=>{\n    alert(\"loaded\")\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    const options = {\n      // types: ['(cities)'],\n    };\n    \n    // Initialize Google Autocomplete\n     let autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n    \n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_components']);\n    \n    // Fire Event when a suggested name is selected\n    autocomplete.addListener('place_changed', handlePlaceSelect);\n    }\n    \nexport const handlePlaceSelect=()=> {\n    // Extract City From Address Object\n    let addressObject = autocomplete.getPlace();\n    let address = addressObject.address_components;\n    \n    // Check if address is valid\n    if (address) {\n      console.log(address)\n      this.setState(\n      {\n        city: address[0].long_name,\n      }\n      );\n    }\n    }"]},"metadata":{},"sourceType":"module"}