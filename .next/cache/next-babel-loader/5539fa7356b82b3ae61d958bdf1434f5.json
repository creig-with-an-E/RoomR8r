{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js\";\nimport React, { Component } from 'react';\nimport { SearchBar } from \"../components\";\nimport Script from \"react-load-script\";\nimport * as googleMapsFunctions from \"../../lib/googlePlaceFunctions\"; // const handleScriptLoad=()=>{\n//   /***loads google script on load */\n//   // Declare Options For Autocomplete\n//   let options = {\n//     // types: ['(cities)'],\n//   };\n//   // Initialize Google Autocomplete\n//    let autocomplete = new google.maps.places.Autocomplete(\n//     document.getElementById('autocomplete'),\n//     options,\n//   );\n//   // Avoid paying for data that you don't need by restricting the set of\n//   // place fields that are returned to just the address components.\n//   autocomplete.setFields(['address_components']);\n//   // Fire Event when a suggested name is selected\n//   autocomplete.addListener('place_changed', handlePlaceSelect);\n//   }\n// const handlePlaceSelect=()=>{\n//   // Extract City From Address Object\n//   let addressObject = autocomplete.getPlace();\n//   let address = addressObject.address_components;\n//   // Check if address is valid\n//   if (address) {\n//     console.log(address)\n//     // this.setState(\n//     // {\n//     //   city: address[0].long_name,\n//     // }\n//     // );\n//   }\n// }\n\nvar GoogleMapsSearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GoogleMapsSearchBar, _Component);\n\n  function GoogleMapsSearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleMapsSearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleMapsSearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      address: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (input) {\n      _this.setState({\n        address: input\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(GoogleMapsSearchBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Script, {\n        url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\",\n        onLoad: googleMapsFunctions.handleScriptLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(SearchBar, {\n        style: {\n          backgroundColor: \"#ddd\"\n        },\n        id: \"autocomplete\",\n        onChange: this.onChangeHandler,\n        placeholder: \"X5X-X5X\",\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GoogleMapsSearchBar;\n}(Component);\n\nexport default GoogleMapsSearchBar;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js"],"names":["React","Component","SearchBar","Script","googleMapsFunctions","GoogleMapsSearchBar","address","input","setState","handleScriptLoad","backgroundColor","onChangeHandler","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,SAAR,QAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,mBAAZ,MAAqC,gCAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,mB;;;;;;;;;;;;;;;;;;4DACG;AACHC,MAAAA,OAAO,EAAC;AADL,K;;sEAGS,UAACC,KAAD,EAAS;AACvB,YAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAACC;AAAT,OAAd;AACD,K;;;;;;;6BAEO;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAC,sGADN;AAEE,QAAA,MAAM,EAAEH,mBAAmB,CAACK,gBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAC;AAAjB,SADT;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,QAAQ,EAAE,KAAKC,eAHjB;AAIE,QAAA,WAAW,EAAC,SAJd;AAKE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWN,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAcD;;;;EAvB+BL,S;;AA0BlC,eAAeI,mBAAf","sourcesContent":["import React,{Component} from 'react';\n\nimport {SearchBar} from \"../components\"\nimport Script from \"react-load-script\"\nimport * as googleMapsFunctions from \"../../lib/googlePlaceFunctions\"\n\n// const handleScriptLoad=()=>{\n//   /***loads google script on load */\n//   // Declare Options For Autocomplete\n//   let options = {\n//     // types: ['(cities)'],\n//   };\n//   // Initialize Google Autocomplete\n//    let autocomplete = new google.maps.places.Autocomplete(\n//     document.getElementById('autocomplete'),\n//     options,\n//   );\n  \n//   // Avoid paying for data that you don't need by restricting the set of\n//   // place fields that are returned to just the address components.\n//   autocomplete.setFields(['address_components']);\n  \n//   // Fire Event when a suggested name is selected\n//   autocomplete.addListener('place_changed', handlePlaceSelect);\n//   }\n  \n// const handlePlaceSelect=()=>{\n//   // Extract City From Address Object\n//   let addressObject = autocomplete.getPlace();\n//   let address = addressObject.address_components;\n//   // Check if address is valid\n//   if (address) {\n//     console.log(address)\n//     // this.setState(\n//     // {\n//     //   city: address[0].long_name,\n//     // }\n//     // );\n//   }\n// }\n\nclass GoogleMapsSearchBar extends Component{\n  state ={\n      address:\"\"\n  }\n  onChangeHandler=(input)=>{\n    this.setState({address:input})\n  }\n\n  render(){\n    return(\n      <div>\n        <Script\n          url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\"\n          onLoad={googleMapsFunctions.handleScriptLoad}\n        />\n        <SearchBar\n          style={{backgroundColor:\"#ddd\"}}\n          id=\"autocomplete\"\n          onChange={this.onChangeHandler}\n          placeholder=\"X5X-X5X\"\n          value={this.state.address}\n        />\n      </div>)\n  }\n}\n\nexport default GoogleMapsSearchBar"]},"metadata":{},"sourceType":"module"}