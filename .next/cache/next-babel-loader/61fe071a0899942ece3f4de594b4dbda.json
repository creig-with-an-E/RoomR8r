{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/pages/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { parseCookies } from \"../lib/parseCookies\";\nimport { ReviewCard, Layout, Spinner, SearchBar } from \"../src/components\";\nimport AddReviewForm from \"../src/modal/addReviewForm\";\nimport * as appActions from \"../store/actions/appActions\";\nimport * as authActions from \"../store/actions/authActions\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: \"\",\n      modalVisible: false,\n      startingUp: true,\n      addressError: null\n    });\n\n    _defineProperty(this, \"onAddressChangeHandler\", input => {\n      //handles user input and stores in local state\n      const valid = this.isValidatePostalCode(input) && this.state.addressError !== true;\n\n      if (!valid) {\n        this.setState({\n          addressError: true\n        });\n        return;\n      } else if (valid) {\n        this.setState({\n          address: input.toUpperCase()\n        });\n      }\n    });\n\n    _defineProperty(this, \"isValidatePostalCode\", input => {\n      // validates the postal code to fit canadian format of X1X-X1X\n      const val = input.split(\"\"); //   if(val.length % 2 == 0){\n      //     this.setState({addressError: this.state.addressError && false})\n      //     // validates there are numbers in the odd spaces\n      //     return !isNaN(parseInt(val[val.length-1])) \n      //   }\n      //     // validates the strings are in the right place by canadian postal code format\n      //     return /^[A-Za-z]/.test(val[val.length-1])\n\n      val.forEach((element, index) => {});\n    });\n\n    _defineProperty(this, \"searchByAddressHandler\", event => {\n      this.props.findByAddress(this.props.userToken, this.state.address);\n    });\n\n    _defineProperty(this, \"showModalHandle\", () => {\n      this.setState({\n        modalVisible: true\n      });\n    });\n\n    _defineProperty(this, \"hideModalHandle\", () => {\n      this.setState({\n        modalVisible: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.savedToken) {\n      Router.push(\"/auth\");\n    } else {\n      this.props.updateSavedToken(this.props.savedToken);\n    }\n  }\n\n  render() {\n    const cards = this.props.searchResults.map(element => React.createElement(ReviewCard, {\n      data: element,\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n    const spinner = !this.props.loading ? null : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }); // showModal is passed down to Layout\n\n    return React.createElement(Layout, {\n      showModalHandle: this.showModalHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AddReviewForm, {\n      userToken: this.props.userToken,\n      modalVisible: this.state.modalVisible,\n      hideModalHandle: this.hideModalHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: styles.headerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Because not all landlords are built the same\")), React.createElement(\"section\", {\n      style: styles.sectionStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      placeholder: \"X5X-X5X\",\n      value: this.state.address,\n      onChange: this.onAddressChangeHandler,\n      onRequestSearch: this.searchByAddressHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: styles.searchHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Search for reviews by Postal Code\"), spinner, React.createElement(\"p\", {\n      style: styles.searchHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", this.state.addressError ? \"Wrong format\" : \"\", \" \")), cards.length !== 0 ? React.createElement(\"div\", {\n      style: {\n        overflowY: \"scroll\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, cards) : null);\n  }\n\n}\n\n_defineProperty(App, \"getInitialProps\", ({\n  req\n}) => {\n  const cookie = parseCookies(req);\n  return {\n    savedToken: cookie.userToken\n  };\n});\n\nconst styles = {\n  headerStyle: {\n    fontSize: 24,\n    color: \"rgb(44,54,94)\",\n    textAlign: \"center\",\n    fontFamily: 'Lexend Tera, sans-serif',\n    fontWeight: \"bold\"\n  },\n  sectionStyle: {\n    alignSelf: \"center\",\n    marginTop: \"5px\",\n    padding: \"20px\",\n    width: \"380px\",\n    textAlign: \"center\"\n  },\n  searchHeading: {\n    fontSize: 16,\n    marginTop: 20,\n    color: \"rgb(44,54,94)\",\n    fontWeight: \"bold\",\n    fontFamily: \"Poppins, sans serif\"\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    userToken: state.auth.userToken,\n    searchResults: state.app.searchResults,\n    loading: state.app.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSavedToken: token => dispatch(authActions.updateSavedToken(token)),\n    findByAddress: (userToken, address) => dispatch(appActions.findReviewByAddress(userToken, address))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/pages/index.js"],"names":["React","Component","connect","Router","parseCookies","ReviewCard","Layout","Spinner","SearchBar","AddReviewForm","appActions","authActions","App","address","modalVisible","startingUp","addressError","input","valid","isValidatePostalCode","state","setState","toUpperCase","val","split","forEach","element","index","event","props","findByAddress","userToken","componentDidMount","savedToken","push","updateSavedToken","render","cards","searchResults","map","id","spinner","loading","showModalHandle","hideModalHandle","marginTop","styles","headerStyle","sectionStyle","onAddressChangeHandler","searchByAddressHandler","searchHeading","length","overflowY","width","req","cookie","fontSize","color","textAlign","fontFamily","fontWeight","alignSelf","padding","mapStateToProps","auth","app","mapDispatchToProps","dispatch","token","findReviewByAddress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {connect} from \"react-redux\"\nimport Router from \"next/router\"\nimport {parseCookies} from \"../lib/parseCookies\"\n\nimport {ReviewCard, Layout, Spinner, SearchBar } from \"../src/components\"\nimport AddReviewForm from \"../src/modal/addReviewForm\"\nimport * as appActions from \"../store/actions/appActions\"\nimport * as authActions from \"../store/actions/authActions\"\n\nclass App extends Component {\n  static getInitialProps=({req})=>{\n    const cookie = parseCookies(req)\n    return {\n      savedToken: cookie.userToken\n    }\n  }\n\n  componentDidMount(){\n    if(!this.props.savedToken){\n      Router.push(\"/auth\")\n    }else{\n      this.props.updateSavedToken(this.props.savedToken)\n    }\n  }\n\n  state = {\n    address: \"\",\n    modalVisible: false,\n    startingUp: true,\n    addressError:null\n  };\n\n  onAddressChangeHandler = input => {\n    //handles user input and stores in local state\n    const valid = this.isValidatePostalCode(input) && this.state.addressError !== true\n    if(!valid){\n      this.setState({addressError: true})\n      return\n    }else if(valid){\n      this.setState({\n       address: input.toUpperCase()\n    })\n    }\n  };\n\n  isValidatePostalCode=(input)=>{\n    // validates the postal code to fit canadian format of X1X-X1X\n    const val = input.split(\"\")\n    //   if(val.length % 2 == 0){\n    //     this.setState({addressError: this.state.addressError && false})\n    //     // validates there are numbers in the odd spaces\n    //     return !isNaN(parseInt(val[val.length-1])) \n    //   }\n    //     // validates the strings are in the right place by canadian postal code format\n    //     return /^[A-Za-z]/.test(val[val.length-1])\n    val.forEach((element,index)=>{\n      \n    })\n  }\n  searchByAddressHandler = event => {\n    this.props.findByAddress(this.props.userToken, this.state.address)\n  }\n\n  showModalHandle=()=>{\n    this.setState({modalVisible: true})\n  }\n\n  hideModalHandle=()=>{\n    this.setState({modalVisible: false})\n  } \n  render() {\n    const cards = this.props.searchResults.map(element=><ReviewCard data={element} key={element.id} />)\n    const spinner = !this.props.loading ? null : <Spinner />;\n    // showModal is passed down to Layout\n    return (\n      <Layout showModalHandle={this.showModalHandle}>\n        <AddReviewForm \n            userToken={this.props.userToken}\n            modalVisible={this.state.modalVisible}\n            hideModalHandle={this.hideModalHandle}>\n        </AddReviewForm>\n        <div style={{marginTop:\"60px\"}}>\n          <h2 style={styles.headerStyle}>\n            Because not all landlords are built the same\n          </h2>\n        </div>\n        <section style={styles.sectionStyle}>\n          <SearchBar\n            placeholder=\"X5X-X5X\"\n            value={this.state.address}\n            onChange={this.onAddressChangeHandler}\n            onRequestSearch={this.searchByAddressHandler}\n          />\n          <p style={styles.searchHeading}>Search for reviews by Postal Code</p>\n          {spinner}\n          <p style={styles.searchHeading}> {this.state.addressError ? \"Wrong format\" : \"\"} </p>\n        </section>            \n        { cards.length !== 0 ? <div style={{overflowY:\"scroll\", width:\"100%\"}}>{cards}</div>: null}\n      </Layout>\n    );\n  }\n}\n\nconst styles = {\n  headerStyle:{\n    fontSize: 24,\n    color: \"rgb(44,54,94)\", \n    textAlign: \"center\",\n    fontFamily:'Lexend Tera, sans-serif',\n    fontWeight:\"bold\"\n  },\n  sectionStyle:{\n    alignSelf:\"center\",\n    marginTop:\"5px\",\n    padding: \"20px\",\n    width: \"380px\",\n    textAlign: \"center\",\n  },\n  searchHeading:{\n    fontSize:16,\n    marginTop:20,\n    color: \"rgb(44,54,94)\", \n    fontWeight:\"bold\",\n    fontFamily:\"Poppins, sans serif\"\n  }\n};\n\nconst mapStateToProps=(state)=>{\n  return{\n    userToken: state.auth.userToken,\n    searchResults:state.app.searchResults,\n    loading: state.app.loading\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    updateSavedToken:(token)=>dispatch(authActions.updateSavedToken(token)),\n    findByAddress:(userToken,address)=>dispatch(appActions.findReviewByAddress(userToken,address))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}