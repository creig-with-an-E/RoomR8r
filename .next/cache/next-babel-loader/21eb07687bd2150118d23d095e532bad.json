{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst findByAddressStart = () => {\n  // called when findReviewByAddress starts\n  // params: \n  // return:\n  return {\n    type: actionTypes.SEARCH_BY_ADDRESS_START\n  };\n};\n\nconst findByAddressSuccess = response => {\n  // iterating over response placing id as part of object\n  const arrayData = _Object$keys(response.data).map(key => {\n    return _objectSpread({}, response.data[key], {\n      id: key\n    });\n  });\n\n  return {\n    type: actionTypes.SEARCH_BY_ADDRESS_SUCCESS,\n    payload: {\n      data: arrayData\n    }\n  };\n};\n\nconst findByAddressFail = error => {\n  return {\n    type: actionTypes.SEARCH_BY_ADDRESS_FAIL,\n    payload: {\n      data: error\n    }\n  };\n};\n\nexport const findReviewByAddress = (userToken, address) => {\n  // fetches reviews from firebase\n  // return: array of objects\n  // params: userToken passed from authState and address \n  return dispatch => {\n    dispatch(findByAddressStart());\n    /*** searchParametersPassed: if search parameter is blank it returns all results\n     *   in the event parameter is passed, it returns relevant postal code results\n    */\n\n    const searchParametersPassed = address ? `&orderBy=\"postal_code\"&startAt=\"${address}\"&endAt=\"${address}\"` : \"\";\n    axios.get(`https://accomo-rater.firebaseio.com/landlord_data.json?auth=${userToken}${searchParametersPassed}`).then(response => {\n      dispatch(findByAddressSuccess(response));\n    }).catch(error => {\n      dispatch(findByAddressFail(error));\n    });\n  };\n};\n/** resetting state */\n\nexport const resetApplicationState = () => {\n  return {\n    type: actionTypes.RESET_APPLICATION_STATE\n  };\n};\n/**functions for google maps auto complete */\n\nexport const setAddress = address => {\n  return {\n    type: actionTypes.SET_ADDRESS_OBJECT,\n    payload: address\n  };\n};\n/*******end of google maps functions********/\n\n/**start of review form functions**********/\n\nexport const setFormFields = data => {\n  //  handles input change for landlord_form review component\n  return {\n    type: actionTypes.SET_REVIEW_FORM_FIELDS,\n    payload: data\n  };\n};\n/*************end of review form data***************************/","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/store/actions/appActions.js"],"names":["axios","actionTypes","findByAddressStart","type","SEARCH_BY_ADDRESS_START","findByAddressSuccess","response","arrayData","data","map","key","id","SEARCH_BY_ADDRESS_SUCCESS","payload","findByAddressFail","error","SEARCH_BY_ADDRESS_FAIL","findReviewByAddress","userToken","address","dispatch","searchParametersPassed","get","then","catch","resetApplicationState","RESET_APPLICATION_STATE","setAddress","SET_ADDRESS_OBJECT","setFormFields","SET_REVIEW_FORM_FIELDS"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;;AAEA,MAAMC,kBAAkB,GAAC,MAAI;AAC3B;AACA;AACA;AACA,SAAO;AAACC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AAAnB,GAAP;AACD,CALD;;AAOA,MAAMC,oBAAoB,GAAEC,QAAD,IAAY;AACrC;AACA,QAAMC,SAAS,GAAG,aAAYD,QAAQ,CAACE,IAArB,EAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACtD,6BAAYJ,QAAQ,CAACE,IAAT,CAAcE,GAAd,CAAZ;AAAgCC,MAAAA,EAAE,EAAED;AAApC;AACC,GAFe,CAAlB;;AAGA,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACW,yBADb;AAELC,IAAAA,OAAO,EAAE;AAAEL,MAAAA,IAAI,EAACD;AAAP;AAFJ,GAAP;AAID,CATD;;AAWA,MAAMO,iBAAiB,GAAEC,KAAD,IAAS;AAC/B,SAAO;AACLZ,IAAAA,IAAI,EAACF,WAAW,CAACe,sBADZ;AAELH,IAAAA,OAAO,EAAC;AAAEL,MAAAA,IAAI,EAAEO;AAAR;AAFH,GAAP;AAID,CALD;;AAOA,OAAO,MAAME,mBAAmB,GAAE,CAACC,SAAD,EAAWC,OAAX,KAAuB;AACvD;AACA;AACA;AACA,SAAQC,QAAD,IAAY;AACjBA,IAAAA,QAAQ,CAAClB,kBAAkB,EAAnB,CAAR;AAEA;;;;AAGA,UAAMmB,sBAAsB,GAAGF,OAAO,GAAG,mCAAkCA,OAAQ,YACjFA,OAAS,GAD2B,GACvB,EADf;AAEAnB,IAAAA,KAAK,CAACsB,GAAN,CAAW,+DACTJ,SAAU,GAAEG,sBAAuB,EADrC,EAGCE,IAHD,CAGMjB,QAAQ,IAAI;AAChBc,MAAAA,QAAQ,CAACf,oBAAoB,CAACC,QAAD,CAArB,CAAR;AACD,KALD,EAMCkB,KAND,CAMOT,KAAK,IAAI;AACdK,MAAAA,QAAQ,CAACN,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AACD,KARD;AASD,GAjBD;AAkBC,CAtBI;AAwBL;;AAEA,OAAO,MAAMU,qBAAqB,GAAC,MAAI;AACrC,SAAM;AACJtB,IAAAA,IAAI,EAAEF,WAAW,CAACyB;AADd,GAAN;AAGD,CAJM;AAMT;;AACA,OAAO,MAAMC,UAAU,GAAER,OAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,IAAI,EAAEF,WAAW,CAAC2B,kBADb;AAELf,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM;AAOP;;AAEA;;AACA,OAAO,MAAMU,aAAa,GAAErB,IAAD,IAAQ;AACjC;AAEA,SAAO;AACLL,IAAAA,IAAI,EAAEF,WAAW,CAAC6B,sBADb;AAELjB,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CAPM;AASP","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\"\n\nconst findByAddressStart=()=>{\n  // called when findReviewByAddress starts\n  // params: \n  // return:\n  return {type: actionTypes.SEARCH_BY_ADDRESS_START}\n}\n\nconst findByAddressSuccess=(response)=>{\n  // iterating over response placing id as part of object\n  const arrayData = Object.keys(response.data).map(key => {\n    return { ...response.data[key], id: key };\n    });\n  return {\n    type: actionTypes.SEARCH_BY_ADDRESS_SUCCESS,\n    payload: { data:arrayData }\n  }\n}\n\nconst findByAddressFail=(error)=>{\n  return {\n    type:actionTypes.SEARCH_BY_ADDRESS_FAIL,\n    payload:{ data: error }\n  }\n}\n\nexport const findReviewByAddress= (userToken,address) => {\n  // fetches reviews from firebase\n  // return: array of objects\n  // params: userToken passed from authState and address \n  return (dispatch)=>{\n    dispatch(findByAddressStart())\n\n    /*** searchParametersPassed: if search parameter is blank it returns all results\n     *   in the event parameter is passed, it returns relevant postal code results\n    */\n    const searchParametersPassed = address ?`&orderBy=\"postal_code\"&startAt=\"${address}\"&endAt=\"${\n      address }\"` :\"\"\n    axios.get(`https://accomo-rater.firebaseio.com/landlord_data.json?auth=${\n      userToken}${searchParametersPassed}`\n    )\n    .then(response => {\n      dispatch(findByAddressSuccess(response))\n    })\n    .catch(error => {\n      dispatch(findByAddressFail(error))\n    });\n  }\n  };\n\n  /** resetting state */\n\n  export const resetApplicationState=()=>{\n    return{\n      type: actionTypes.RESET_APPLICATION_STATE\n    }\n  }\n\n/**functions for google maps auto complete */\nexport const setAddress=(address)=>{\n  return {\n    type: actionTypes.SET_ADDRESS_OBJECT,\n    payload: address\n  }\n}\n\n/*******end of google maps functions********/ \n\n/**start of review form functions**********/ \nexport const setFormFields=(data)=>{\n  //  handles input change for landlord_form review component\n\n  return {\n    type: actionTypes.SET_REVIEW_FORM_FIELDS,\n    payload: data\n  }\n}\n\n/*************end of review form data***************************/ "]},"metadata":{},"sourceType":"module"}