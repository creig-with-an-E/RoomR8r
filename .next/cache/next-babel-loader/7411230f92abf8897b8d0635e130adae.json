{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js\";\nimport React, { Component } from 'react';\nimport { SearchBar } from \"../components\";\nimport Script from \"react-load-script\";\n\nconst handleScriptLoad = () => {\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n  let options = {// types: ['(cities)'],\n  }; // Initialize Google Autocomplete\n\n  let autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n\n  autocomplete.setFields(['address_components']); // Fire Event when a suggested name is selected\n\n  autocomplete.addListener('place_changed', handlePlaceSelect);\n};\n\nconst handlePlaceSelect = () => {\n  // Extract City From Address Object\n  let addressObject = autocomplete.getPlace();\n  let address = addressObject.address_components; // Check if address is valid\n\n  if (address) {\n    console.log(address); // this.setState(\n    // {\n    //   city: address[0].long_name,\n    // }\n    // );\n  }\n};\n\nclass GoogleMapsSearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: \"\"\n    });\n\n    _defineProperty(this, \"onChangeHandler\", input => {\n      this.setState({\n        address: input\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Script, {\n      url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\",\n      onLoad: handleScriptLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      style: {\n        backgroundColor: \"#ddd\"\n      },\n      id: \"autocomplete\",\n      onChange: this.onChangeHandler,\n      placeholder: \"X5X-X5X\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GoogleMapsSearchBar;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/roomR8r/src/stepper/googleMapsSearchBar.js"],"names":["React","Component","SearchBar","Script","handleScriptLoad","options","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","console","log","GoogleMapsSearchBar","input","setState","render","backgroundColor","onChangeHandler","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,SAAR,QAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,gBAAgB,GAAC,MAAI;AACzB;AACA;AACA,MAAIC,OAAO,GAAG,CACZ;AADY,GAAd,CAHyB,CAMzB;;AACC,MAAIC,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAClBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADkB,EAElBP,OAFkB,CAAnB,CAPwB,CAYzB;AACA;;AACAC,EAAAA,YAAY,CAACO,SAAb,CAAuB,CAAC,oBAAD,CAAvB,EAdyB,CAgBzB;;AACAP,EAAAA,YAAY,CAACQ,WAAb,CAAyB,eAAzB,EAA0CC,iBAA1C;AACC,CAlBH;;AAoBA,MAAMA,iBAAiB,GAAC,MAAI;AAC1B;AACA,MAAIC,aAAa,GAAGV,YAAY,CAACW,QAAb,EAApB;AACA,MAAIC,OAAO,GAAGF,aAAa,CAACG,kBAA5B,CAH0B,CAI1B;;AACA,MAAID,OAAJ,EAAa;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EADW,CAEX;AACA;AACA;AACA;AACA;AACD;AACF,CAbD;;AAeA,MAAMI,mBAAN,SAAkCrB,SAAlC,CAA2C;AAAA;AAAA;;AAAA,mCAClC;AACHiB,MAAAA,OAAO,EAAC;AADL,KADkC;;AAAA,6CAIxBK,KAAD,IAAS;AACvB,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAACK;AAAT,OAAd;AACD,KANwC;AAAA;;AAQzCE,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAC,sGADN;AAEE,MAAA,MAAM,EAAErB,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAACsB,QAAAA,eAAe,EAAC;AAAjB,OADT;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,QAAQ,EAAE,KAAKC,eAHjB;AAIE,MAAA,WAAW,EAAC,SAJd;AAKE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWV,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAcD;;AAvBwC;;AA0B3C,eAAeI,mBAAf","sourcesContent":["import React,{Component} from 'react';\n\nimport {SearchBar} from \"../components\"\nimport Script from \"react-load-script\"\n\nconst handleScriptLoad=()=>{\n  /***loads google script on load */\n  // Declare Options For Autocomplete\n  let options = {\n    // types: ['(cities)'],\n  };\n  // Initialize Google Autocomplete\n   let autocomplete = new google.maps.places.Autocomplete(\n    document.getElementById('autocomplete'),\n    options,\n  );\n  \n  // Avoid paying for data that you don't need by restricting the set of\n  // place fields that are returned to just the address components.\n  autocomplete.setFields(['address_components']);\n  \n  // Fire Event when a suggested name is selected\n  autocomplete.addListener('place_changed', handlePlaceSelect);\n  }\n  \nconst handlePlaceSelect=()=>{\n  // Extract City From Address Object\n  let addressObject = autocomplete.getPlace();\n  let address = addressObject.address_components;\n  // Check if address is valid\n  if (address) {\n    console.log(address)\n    // this.setState(\n    // {\n    //   city: address[0].long_name,\n    // }\n    // );\n  }\n}\n\nclass GoogleMapsSearchBar extends Component{\n  state ={\n      address:\"\"\n  }\n  onChangeHandler=(input)=>{\n    this.setState({address:input})\n  }\n\n  render(){\n    return(\n      <div>\n        <Script\n          url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBWcDVGfs8R5EmWbh9xsuYEHycoqDyDf9I&libraries=places\"\n          onLoad={handleScriptLoad}\n        />\n        <SearchBar\n          style={{backgroundColor:\"#ddd\"}}\n          id=\"autocomplete\"\n          onChange={this.onChangeHandler}\n          placeholder=\"X5X-X5X\"\n          value={this.state.address}\n        />\n      </div>)\n  }\n}\n\nexport default GoogleMapsSearchBar"]},"metadata":{},"sourceType":"module"}