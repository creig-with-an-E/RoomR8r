{"version":3,"file":"static/webpack/static/development/pages/index.js.6147600cf44505f89731.hot-update.js","sources":["webpack:///./lib/googlePlaceFunctions.js"],"sourcesContent":["import React,{Component} from \"react\"\n\nclass googlePlaceFunctions extends Component {\n  state={\n    address:{}\n  }\n\n  static handleScriptLoad=()=>{\n    /***loads google script on load */\n    // Declare Options For Autocomplete\n    const options = {\n      // types: ['(cities)'],\n      componentRestrictions: {country: 'ca'}\n    };\n    // Initialize Google Autocomplete\n     const autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n    \n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_components']);\n    \n    // Fire Event when a suggested name is selected\n    autocomplete.addListener('place_changed', ()=>this.constructor.handlePlaceSelect(autocomplete))\n    }\n    \n  handlePlaceSelect=(autocomplete)=>{\n    // Extract City From Address Object\n    let addressObject = autocomplete.getPlace();\n    let address = addressObject.address_components;\n    \n    // Check if address is valid\n    if (address) {\n      this.setState(\n      {\n        // city: address[0].long_name,\n        address: address,\n      }\n      );\n    }\n    }\n}\n\nexport default googlePlaceFunctions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAwBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;;;;;AAzCA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;AAMA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAkBA;;;;A","sourceRoot":""}