{"version":3,"file":"static/webpack/static/development/pages/index.js.9ac59a20a3961e53112e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Spinner from \"../src/components/spinner\";\nimport Layout from \"../src/components/layout\"\nimport {connect} from \"react-redux\"\nimport Router from \"next/router\"\nimport Card from \"../src/components/card\"\n\nimport * as appActions from \"../store/actions/appActions\"\n\nimport SearchBar from \"../src/components/searchBar\";\nimport Modal from \"../src/components/modal\"\n\nclass App extends Component {\n  componentDidMount(){\n    !this.props.userToken? Router.push(\"/login\") : null\n  }\n  state = {\n    address: \"\",\n    modalVisible: true\n  };\n\n  onAddressChangeHandler = input => {\n    //handles user input and stores in local state\n    this.setState({\n      address: input.toUpperCase()\n    });\n  };\n\n  searchByAddressHandler = event => {\n    this.props.findByAddress(this.props.userToken, this.state.address)\n  }\n\n  showModalHandle=()=>{\n    this.setState({modalVisible: true})\n  }\n\n  hideModalHandle=()=>{\n    this.setState({modalVisible: false})\n  } \n  render() {\n    const cards = this.props.searchResults.map(element=><Card data={element} key={element.id} />)\n    const spinner = !this.props.loading ? null : <Spinner />;\n    return (\n      <Layout>\n        <Modal modalVisible={this.state.modalVisible}\n            showModalHandle={this.showModalHandle} \n            hideModalHandle={this.hideModalHandle}  />\n        <div style={{marginTop:\"60px\"}}>\n          <h2 style={styles.headerStyle}>\n            Because not all landlords are built the same\n          </h2>\n        </div>\n        <div\n          style={{\n            marginTop:\"5px\",\n            padding: \"20px\",\n            width: \"60%\",\n            textAlign: \"center\",\n          }}\n        >\n          <SearchBar\n            placeholder=\"Enter address\"\n            value={this.state.address}\n            onChange={this.onAddressChangeHandler}\n            onRequestSearch={this.searchByAddressHandler}\n          />\n          {spinner}\n        </div>            \n        { cards.length !== 0 ? <div style={{overflowY:\"scroll\", width:\"100%\"}}>{cards}</div>: null}\n      </Layout>\n    );\n  }\n}\n\nconst styles = {\n  headerStyle:{\n    color: \"#2C365E\", \n    textAlign: \"center\",\n    fontFamily:'Fira Sans, sans-serif',\n    fontWeight:\"bold\"\n  },\n};\n\nconst mapStateToProps=(state)=>{\n  return{\n    userToken: state.auth.userToken,\n    searchResults:state.app.searchResults,\n    loading: state.app.loading\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    findByAddress:(userToken,address)=>dispatch(appActions.findReviewByAddress(userToken,address))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AA1BA;AACA;AACA;;;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3DA;AACA;AA6DA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}